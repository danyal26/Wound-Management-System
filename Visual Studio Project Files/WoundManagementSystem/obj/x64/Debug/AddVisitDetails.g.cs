#pragma checksum "C:\Users\danny\Desktop\VS Projects\WoundManagementSystem\WoundManagementSystem\AddVisitDetails.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "A574293C83161BD960620715C05A1B34"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WoundManagementSystem
{
    partial class AddVisitDetails : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Tag(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class AddVisitDetails_obj149_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.VisitDocumentInformation dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj150;

            public AddVisitDetails_obj149_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 150:
                        this.obj150 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.VisitDocumentInformation data = args.NewValue as global::WoundManagementSystem.VisitDocumentInformation;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.VisitDocumentInformation was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.VisitDocumentInformation);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.VisitDocumentInformation) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj149_Bindings

            public void SetDataRoot(global::WoundManagementSystem.VisitDocumentInformation newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.VisitDocumentInformation obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_fileName(obj.fileName, phase);
                    }
                }
            }
            private void Update_fileName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj150, obj, null);
                }
            }
        }

        private class AddVisitDetails_obj158_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.VisitDocumentInformation dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj159;

            public AddVisitDetails_obj158_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 159:
                        this.obj159 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.VisitDocumentInformation data = args.NewValue as global::WoundManagementSystem.VisitDocumentInformation;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.VisitDocumentInformation was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.VisitDocumentInformation);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.VisitDocumentInformation) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj158_Bindings

            public void SetDataRoot(global::WoundManagementSystem.VisitDocumentInformation newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.VisitDocumentInformation obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_fileName(obj.fileName, phase);
                    }
                }
            }
            private void Update_fileName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj159, obj, null);
                }
            }
        }

        private class AddVisitDetails_obj178_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.Service dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj179;
            private global::Windows.UI.Xaml.Controls.TextBlock obj180;
            private global::Windows.UI.Xaml.Controls.TextBlock obj181;

            public AddVisitDetails_obj178_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 179:
                        this.obj179 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 180:
                        this.obj180 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 181:
                        this.obj181 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Service data = args.NewValue as global::WoundManagementSystem.Service;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Service was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Service);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Service) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj178_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Service newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Service obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_price(obj.price, phase);
                        this.Update_type(obj.type, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj179, obj, null);
                }
            }
            private void Update_price(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj180, obj.ToString(), null);
                }
            }
            private void Update_type(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj181, obj, null);
                }
            }
        }

        private class AddVisitDetails_obj189_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.Medicine dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj190;
            private global::Windows.UI.Xaml.Controls.TextBlock obj191;
            private global::Windows.UI.Xaml.Controls.TextBlock obj192;

            public AddVisitDetails_obj189_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 190:
                        this.obj190 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 191:
                        this.obj191 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 192:
                        this.obj192 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Medicine data = args.NewValue as global::WoundManagementSystem.Medicine;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Medicine was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Medicine);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Medicine) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj189_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Medicine newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Medicine obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_price(obj.price, phase);
                        this.Update_quantity(obj.quantity, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj190, obj, null);
                }
            }
            private void Update_price(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj191, obj.ToString(), null);
                }
            }
            private void Update_quantity(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj192, obj.ToString(), null);
                }
            }
        }

        private class AddVisitDetails_obj197_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.Service dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj198;
            private global::Windows.UI.Xaml.Controls.TextBlock obj199;
            private global::Windows.UI.Xaml.Controls.TextBlock obj200;

            public AddVisitDetails_obj197_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 198:
                        this.obj198 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 199:
                        this.obj199 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 200:
                        this.obj200 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Service data = args.NewValue as global::WoundManagementSystem.Service;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Service was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Service);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Service) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj197_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Service newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Service obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_price(obj.price, phase);
                        this.Update_type(obj.type, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj198, obj, null);
                }
            }
            private void Update_price(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj199, obj.ToString(), null);
                }
            }
            private void Update_type(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj200, obj, null);
                }
            }
        }

        private class AddVisitDetails_obj205_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.Medicine dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj206;
            private global::Windows.UI.Xaml.Controls.TextBlock obj207;

            public AddVisitDetails_obj205_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 206:
                        this.obj206 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 207:
                        this.obj207 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Medicine data = args.NewValue as global::WoundManagementSystem.Medicine;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Medicine was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Medicine);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Medicine) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj205_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Medicine newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Medicine obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_price(obj.price, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj206, obj, null);
                }
            }
            private void Update_price(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj207, obj.ToString(), null);
                }
            }
        }

        private class AddVisitDetails_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddVisitDetails_Bindings
        {
            private global::WoundManagementSystem.AddVisitDetails dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ListView obj146;
            private global::Windows.UI.Xaml.Controls.ListView obj155;
            private global::Windows.UI.Xaml.Controls.ListView obj175;
            private global::Windows.UI.Xaml.Controls.ListView obj186;
            private global::Windows.UI.Xaml.Controls.Button obj194;
            private global::Windows.UI.Xaml.Controls.ListView obj196;
            private global::Windows.UI.Xaml.Controls.Button obj202;
            private global::Windows.UI.Xaml.Controls.ListView obj204;

            public AddVisitDetails_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 146:
                        this.obj146 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 155:
                        this.obj155 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 175:
                        this.obj175 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 186:
                        this.obj186 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 194:
                        this.obj194 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 196:
                        this.obj196 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 202:
                        this.obj202 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 204:
                        this.obj204 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    default:
                        break;
                }
            }

            // IAddVisitDetails_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // AddVisitDetails_obj1_Bindings

            public void SetDataRoot(global::WoundManagementSystem.AddVisitDetails newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.AddVisitDetails obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_docsCollection(obj.docsCollection, phase);
                        this.Update_photosCollection(obj.photosCollection, phase);
                        this.Update_patientServiceList(obj.patientServiceList, phase);
                        this.Update_patientMedList(obj.patientMedList, phase);
                        this.Update_fileName(obj.fileName, phase);
                        this.Update_serviceList(obj.serviceList, phase);
                        this.Update_medList(obj.medList, phase);
                    }
                }
            }
            private void Update_docsCollection(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.VisitDocumentInformation> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj146, obj, null);
                }
            }
            private void Update_photosCollection(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.VisitDocumentInformation> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj155, obj, null);
                }
            }
            private void Update_patientServiceList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Service> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj175, obj, null);
                }
            }
            private void Update_patientMedList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Medicine> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj186, obj, null);
                }
            }
            private void Update_fileName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj194, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj202, obj, null);
                }
            }
            private void Update_serviceList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Service> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj196, obj, null);
                }
            }
            private void Update_medList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Medicine> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj204, obj, null);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.MainSplitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 3:
                {
                    this.PanelAssessment = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 4:
                {
                    this.PanelAssessmentTitle = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5:
                {
                    this.MainPanel = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 6:
                {
                    this.PanelError2 = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 7:
                {
                    this.FooterPanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 8:
                {
                    this.BtnAddAssessment = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 2300 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnAddAssessment).Click += this.BtnAddAssessment_Click;
                    #line default
                }
                break;
            case 9:
                {
                    this.BtnRemoveAssessment = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 2308 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnRemoveAssessment).Click += this.BtnRemoveAssessment_Click;
                    #line default
                }
                break;
            case 10:
                {
                    this.TxtErrorMessage2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 11:
                {
                    this.BtnErrorClose2 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 2283 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnErrorClose2).Click += this.BtnErrorClose2_Click;
                    #line default
                }
                break;
            case 12:
                {
                    this.Row20 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 13:
                {
                    this.Row21 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 14:
                {
                    this.Row15 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 15:
                {
                    this.Row16 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 16:
                {
                    this.Row17 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 17:
                {
                    this.Row18 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 18:
                {
                    this.Row19 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 19:
                {
                    this.Row22 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 20:
                {
                    this.TxtDurationUlcer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 21:
                {
                    this.TxtCommentDurationUlcer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 22:
                {
                    this.TxtPallorFoot = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 23:
                {
                    this.TxtCyanosis = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 24:
                {
                    this.TxtLossHairGrowth = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 25:
                {
                    this.TxtFissures = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 26:
                {
                    this.TxtCirculation = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 27:
                {
                    this.TxtCircumferential = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 28:
                {
                    this.TxtWoundExudate = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 29:
                {
                    this.TxtDepth = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 30:
                {
                    this.TxtSize = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 31:
                {
                    this.TxtSite = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 32:
                {
                    this.TxtHammerToe = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 33:
                {
                    this.TxtBrittleNail = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 34:
                {
                    this.TxtCallus = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 35:
                {
                    this.TxtPeriwound = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 36:
                {
                    this.TxtWoundSurface = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 37:
                {
                    this.TxtUndermining = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 38:
                {
                    this.Row13 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 39:
                {
                    this.Row14 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 40:
                {
                    this.TxtRBS = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 41:
                {
                    this.TxtCommentRBS = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 42:
                {
                    this.TxtTemp = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 43:
                {
                    this.TxtCommentTemperature = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 44:
                {
                    this.TxtPulse = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 45:
                {
                    this.TxtCommentPulse = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 46:
                {
                    this.TxtBP = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 47:
                {
                    this.TxtCommentBP = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 48:
                {
                    this.Row10 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 49:
                {
                    this.Row11 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 50:
                {
                    this.Row12 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 51:
                {
                    this.ToggleNeurological = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 52:
                {
                    this.TxtCommentNeurological = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 53:
                {
                    this.ToggleAbdominal = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 54:
                {
                    this.TxtCommentAbdominal = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 55:
                {
                    this.ToggleRespiratory = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 56:
                {
                    this.TxtCommentRespiratory = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 57:
                {
                    this.ToggleCardiovascular = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 58:
                {
                    this.TxtCommentCardiovascular = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 59:
                {
                    this.TogglePulses = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 60:
                {
                    this.TxtCommentPulses = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 61:
                {
                    this.ToggleClubbing = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 62:
                {
                    this.TxtCommentClubbing = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 63:
                {
                    this.ToggleJaundice = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 64:
                {
                    this.TxtCommentJaundice = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 65:
                {
                    this.TogglePallor = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 66:
                {
                    this.TxtCommentPallor = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 67:
                {
                    this.Row3 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 68:
                {
                    this.Row4 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 69:
                {
                    this.Row5 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 70:
                {
                    this.Row6 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 71:
                {
                    this.Row7 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 72:
                {
                    this.Row9 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 73:
                {
                    this.Row8 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 74:
                {
                    this.ToggleTreatment = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 75:
                {
                    this.TxtCommentTreatment = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 76:
                {
                    this.ToggleAnhydrosis = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 77:
                {
                    this.TxtCommentAnhydrosis = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 78:
                {
                    this.ToggleRadPain = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 79:
                {
                    this.TxtCommentRadPain = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 80:
                {
                    this.ToggleHypesthesia = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 81:
                {
                    this.TxtCommentHypesthesia = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 82:
                {
                    this.ToggleDysesthesia = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 83:
                {
                    this.TxtCommentDysesthesia = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 84:
                {
                    this.ToggleParaesthesia = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 85:
                {
                    this.TxtCommentParaesthesia = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 86:
                {
                    this.ToggleHyperesthesia = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 87:
                {
                    this.TxtCommentHyperesthesia = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 88:
                {
                    this.TogglePainAtRest = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 89:
                {
                    this.TxtCommentPainAtRest = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 90:
                {
                    this.ToggleClaudication = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 91:
                {
                    this.TxtCommentClaudication = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 92:
                {
                    this.ToggleSmoking = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 93:
                {
                    this.TxtCommentSmoking = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 94:
                {
                    this.ToggleAllergy = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 95:
                {
                    this.TxtCommentAllergy = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 96:
                {
                    this.ToggleDVT = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 97:
                {
                    this.TxtCommentDVT = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 98:
                {
                    this.ToggleCVA = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 99:
                {
                    this.TxtCommentCVA = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 100:
                {
                    this.ToggleThyroid = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 101:
                {
                    this.TxtCommentThyroid = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 102:
                {
                    this.ToggleAsthma = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 103:
                {
                    this.TxtCommentAsthma = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 104:
                {
                    this.ToggleIHD = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 105:
                {
                    this.TxtCommentIHD = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 106:
                {
                    this.ToggleHypertension = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 107:
                {
                    this.TxtCommentHypertension = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 108:
                {
                    this.ToggleDiabetes = (global::Windows.UI.Xaml.Controls.ToggleSwitch)(target);
                }
                break;
            case 109:
                {
                    this.TxtCommentDiabetes = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 110:
                {
                    this.Row1 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 111:
                {
                    this.Row2 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 112:
                {
                    this.TxtManner = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 113:
                {
                    this.TxtDescription = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 114:
                {
                    this.TxtPurpose = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 115:
                {
                    this.BtnCancelAssessment = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 999 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCancelAssessment).Click += this.BtnCancelAssessment_Click;
                    #line default
                }
                break;
            case 116:
                {
                    this.BtnCloseNav = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 25 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCloseNav).Click += this.BtnToggleNav_Click;
                    #line default
                }
                break;
            case 117:
                {
                    this.GridTitleVisits = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 118:
                {
                    this.PanelError = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 119:
                {
                    this.Overlay = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 120:
                {
                    this.PanelDialog = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 121:
                {
                    this.PanelDialog2 = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 122:
                {
                    this.PanelPhotoName = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 123:
                {
                    this.PanelDocName = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 124:
                {
                    this.TxtDocName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 125:
                {
                    this.TxtErrorMessage3 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 126:
                {
                    this.BtnDocNameDone = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 970 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnDocNameDone).Click += this.BtnDocNameDone_Click;
                    #line default
                }
                break;
            case 127:
                {
                    this.TxtPhotoName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 128:
                {
                    this.TxtErrorMessage4 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 129:
                {
                    this.BtnPhotoNameDone = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 940 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnPhotoNameDone).Click += this.BtnPhotoNameDone_Click;
                    #line default
                }
                break;
            case 130:
                {
                    this.TxtDialogMessage2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 131:
                {
                    this.BtnDialogOK2 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 898 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnDialogOK2).Click += this.BtnDialogOK2_Click;
                    #line default
                }
                break;
            case 132:
                {
                    this.BtnDialogCancel2 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 905 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnDialogCancel2).Click += this.BtnDialogCancel2_Click;
                    #line default
                }
                break;
            case 133:
                {
                    this.TxtDialogMessage = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 134:
                {
                    this.BtnDialogOK = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 871 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnDialogOK).Click += this.BtnDialogOK_Click;
                    #line default
                }
                break;
            case 135:
                {
                    this.TxtErrorMessage = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 136:
                {
                    this.BtnErrorClose = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 837 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnErrorClose).Click += this.BtnErrorClose_Click;
                    #line default
                }
                break;
            case 137:
                {
                    this.PanelMedList = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 138:
                {
                    this.PanelServicesList = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 139:
                {
                    this.PanelAddMedServ = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 140:
                {
                    this.grd = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 141:
                {
                    this.BtnReceipt = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 808 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnReceipt).Click += this.BtnReceipt_Click;
                    #line default
                }
                break;
            case 142:
                {
                    this.LblDocumentsTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 143:
                {
                    this.BtnAddDoc = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 721 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnAddDoc).Click += this.BtnAddDoc_Click;
                    #line default
                }
                break;
            case 144:
                {
                    this.BtnRemoveDoc = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 732 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnRemoveDoc).Click += this.BtnRemoveDoc_Click;
                    #line default
                }
                break;
            case 145:
                {
                    this.DividerDocs = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 146:
                {
                    this.ListPatientDocs = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 147:
                {
                    this.NoDocsPanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 148:
                {
                    this.TxtNoDocs = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 151:
                {
                    this.LblPicturesTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 152:
                {
                    this.BtnAddPic = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 626 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnAddPic).Click += this.BtnAddPic_Click;
                    #line default
                }
                break;
            case 153:
                {
                    this.BtnRemovePic = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 637 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnRemovePic).Click += this.BtnRemovePhoto_Click;
                    #line default
                }
                break;
            case 154:
                {
                    this.DividerPhotos = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 155:
                {
                    this.ListPatientPhotos = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 156:
                {
                    this.NoPhotosPanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 157:
                {
                    this.TxtNoPhotos = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 160:
                {
                    this.LblNotes = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 161:
                {
                    this.TxtNotes = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 162:
                {
                    this.LblBeforeClosing = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 163:
                {
                    this.TxtBeforeClosing = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 164:
                {
                    this.LblActionsTaken = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 165:
                {
                    this.TxtActionsTaken = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 166:
                {
                    this.LblAfterOpening = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 167:
                {
                    this.TxtAfterOpening = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 168:
                {
                    this.LblName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 169:
                {
                    this.LblDateTime = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 170:
                {
                    this.BtnNewAssessment = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 492 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnNewAssessment).Click += this.BtnNewAssessment_Click;
                    #line default
                }
                break;
            case 171:
                {
                    this.LblServicesTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 172:
                {
                    this.BtnAddService = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 383 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnAddService).Click += this.BtnAddService_Click;
                    #line default
                }
                break;
            case 173:
                {
                    this.BtnRemoveService = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 394 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnRemoveService).Click += this.BtnRemoveService_Click;
                    #line default
                }
                break;
            case 174:
                {
                    this.DividerServices = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 175:
                {
                    this.ListPatientServices = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 176:
                {
                    this.NoServicePanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 177:
                {
                    this.TxtNoServices = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 182:
                {
                    this.LblMedicationTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 183:
                {
                    this.BtnAddMed = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 268 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnAddMed).Click += this.BtnAddMed_Click;
                    #line default
                }
                break;
            case 184:
                {
                    this.BtnRemoveMed = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 279 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnRemoveMed).Click += this.BtnRemoveMed_Click;
                    #line default
                }
                break;
            case 185:
                {
                    this.DividerMeds = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 186:
                {
                    this.ListPatientMeds = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 187:
                {
                    this.NoMedsPanel = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 188:
                {
                    this.TxtNoMeds = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 193:
                {
                    this.LblServicesListTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 194:
                {
                    this.BtnCancelServicesList = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 169 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCancelServicesList).Click += this.BtnCancelServicesList_Click;
                    #line default
                }
                break;
            case 195:
                {
                    this.DividerServicesList = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 196:
                {
                    this.ListAddService = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    #line 183 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.ListView)this.ListAddService).ItemClick += this.ListAddService_ItemClick;
                    #line default
                }
                break;
            case 201:
                {
                    this.LblMedListTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 202:
                {
                    this.BtnCancelMedList = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 98 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCancelMedList).Click += this.BtnCancelMedList_Click;
                    #line default
                }
                break;
            case 203:
                {
                    this.DividerMedsList = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 204:
                {
                    this.ListAddMed = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    #line 112 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.ListView)this.ListAddMed).ItemClick += this.ListAddMed_ItemClick;
                    #line default
                }
                break;
            case 208:
                {
                    this.BtnCancel = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 49 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCancel).Click += this.BtnCancel_Click;
                    #line default
                }
                break;
            case 209:
                {
                    this.BtnOpenNav = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 56 "..\..\..\AddVisitDetails.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnOpenNav).Click += this.BtnToggleNav_Click;
                    #line default
                }
                break;
            case 210:
                {
                    this.IconAppts = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AddVisitDetails_obj1_Bindings bindings = new AddVisitDetails_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 149:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element149 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj149_Bindings bindings = new AddVisitDetails_obj149_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.VisitDocumentInformation) element149.DataContext);
                    element149.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element149, bindings);
                }
                break;
            case 158:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element158 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj158_Bindings bindings = new AddVisitDetails_obj158_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.VisitDocumentInformation) element158.DataContext);
                    element158.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element158, bindings);
                }
                break;
            case 178:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element178 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj178_Bindings bindings = new AddVisitDetails_obj178_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Service) element178.DataContext);
                    element178.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element178, bindings);
                }
                break;
            case 189:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element189 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj189_Bindings bindings = new AddVisitDetails_obj189_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Medicine) element189.DataContext);
                    element189.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element189, bindings);
                }
                break;
            case 197:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element197 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj197_Bindings bindings = new AddVisitDetails_obj197_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Service) element197.DataContext);
                    element197.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element197, bindings);
                }
                break;
            case 205:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element205 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddVisitDetails_obj205_Bindings bindings = new AddVisitDetails_obj205_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Medicine) element205.DataContext);
                    element205.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element205, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

