#pragma checksum "C:\Users\danny\Desktop\VS Projects\WoundManagementSystem\WoundManagementSystem\ViewPatientVisit.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "372F5833473DBE094D909B3ACC67F0CF"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WoundManagementSystem
{
    partial class ViewPatientVisit : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        private class ViewPatientVisit_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IViewPatientVisit_Bindings
        {
            private global::WoundManagementSystem.VisitDocumentInformation dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj16;

            public ViewPatientVisit_obj15_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16:
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.VisitDocumentInformation data = args.NewValue as global::WoundManagementSystem.VisitDocumentInformation;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.VisitDocumentInformation was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.VisitDocumentInformation);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.VisitDocumentInformation) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IViewPatientVisit_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // ViewPatientVisit_obj15_Bindings

            public void SetDataRoot(global::WoundManagementSystem.VisitDocumentInformation newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.VisitDocumentInformation obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_fileName(obj.fileName, phase);
                    }
                }
            }
            private void Update_fileName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                }
            }
        }

        private class ViewPatientVisit_obj20_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IViewPatientVisit_Bindings
        {
            private global::WoundManagementSystem.VisitPhotoInformation dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Image obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj22;

            public ViewPatientVisit_obj20_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 22:
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.VisitPhotoInformation data = args.NewValue as global::WoundManagementSystem.VisitPhotoInformation;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.VisitPhotoInformation was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.VisitPhotoInformation);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.StackPanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.VisitPhotoInformation) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IViewPatientVisit_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // ViewPatientVisit_obj20_Bindings

            public void SetDataRoot(global::WoundManagementSystem.VisitPhotoInformation newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.VisitPhotoInformation obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_image(obj.image, phase);
                        this.Update_fileName(obj.fileName, phase);
                    }
                }
            }
            private void Update_image(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj21, obj, null);
                }
            }
            private void Update_fileName(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj22, obj, null);
                }
            }
        }

        private class ViewPatientVisit_obj37_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IViewPatientVisit_Bindings
        {
            private global::WoundManagementSystem.Service dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj38;
            private global::Windows.UI.Xaml.Controls.TextBlock obj39;

            public ViewPatientVisit_obj37_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 38:
                        this.obj38 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 39:
                        this.obj39 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Service data = args.NewValue as global::WoundManagementSystem.Service;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Service was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Service);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Service) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IViewPatientVisit_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // ViewPatientVisit_obj37_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Service newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Service obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_type(obj.type, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj38, obj, null);
                }
            }
            private void Update_type(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj39, obj, null);
                }
            }
        }

        private class ViewPatientVisit_obj43_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IViewPatientVisit_Bindings
        {
            private global::WoundManagementSystem.Medicine dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj44;
            private global::Windows.UI.Xaml.Controls.TextBlock obj45;

            public ViewPatientVisit_obj43_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 44:
                        this.obj44 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 45:
                        this.obj45 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::WoundManagementSystem.Medicine data = args.NewValue as global::WoundManagementSystem.Medicine;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::WoundManagementSystem.Medicine was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::WoundManagementSystem.Medicine);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RelativePanel)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::WoundManagementSystem.Medicine) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
            }

            // IViewPatientVisit_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // ViewPatientVisit_obj43_Bindings

            public void SetDataRoot(global::WoundManagementSystem.Medicine newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.Medicine obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_quantity(obj.quantity, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj44, obj, null);
                }
            }
            private void Update_quantity(global::System.Int32 obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj45, obj.ToString(), null);
                }
            }
        }

        private class ViewPatientVisit_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IViewPatientVisit_Bindings
        {
            private global::WoundManagementSystem.ViewPatientVisit dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ListView obj14;
            private global::Windows.UI.Xaml.Controls.GridView obj19;
            private global::Windows.UI.Xaml.Controls.ListView obj36;
            private global::Windows.UI.Xaml.Controls.ListView obj42;

            public ViewPatientVisit_obj1_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 19:
                        this.obj19 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 36:
                        this.obj36 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 42:
                        this.obj42 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    default:
                        break;
                }
            }

            // IViewPatientVisit_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            // ViewPatientVisit_obj1_Bindings

            public void SetDataRoot(global::WoundManagementSystem.ViewPatientVisit newDataRoot)
            {
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WoundManagementSystem.ViewPatientVisit obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_docsCollection(obj.docsCollection, phase);
                        this.Update_photosCollection(obj.photosCollection, phase);
                        this.Update_servList(obj.servList, phase);
                        this.Update_medList(obj.medList, phase);
                    }
                }
            }
            private void Update_docsCollection(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.VisitDocumentInformation> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj14, obj, null);
                }
            }
            private void Update_photosCollection(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.VisitPhotoInformation> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj19, obj, null);
                }
            }
            private void Update_servList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Service> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj36, obj, null);
                }
            }
            private void Update_medList(global::System.Collections.ObjectModel.ObservableCollection<global::WoundManagementSystem.Medicine> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj42, obj, null);
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.MainSplitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 3:
                {
                    this.BtnCloseNav = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 16 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCloseNav).Click += this.BtnToggleNav_Click;
                    #line default
                }
                break;
            case 4:
                {
                    this.GridTitle = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5:
                {
                    this.Overlay = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 6:
                {
                    this.PanelLargePhoto = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 7:
                {
                    this.ImgLargePhoto = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 8:
                {
                    this.TxtLargePhotoName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 9:
                {
                    this.BtnClosePhoto = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 473 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnClosePhoto).Click += this.BtnClosePhoto_Click;
                    #line default
                }
                break;
            case 10:
                {
                    this.PanelAddMedServ = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 11:
                {
                    this.BtnReceipt = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 437 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnReceipt).Click += this.BtViewReceipt_Click;
                    #line default
                }
                break;
            case 12:
                {
                    this.LblDocumentsTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 13:
                {
                    this.DividerDocs = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 14:
                {
                    this.ListDocs = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 17:
                {
                    this.LblPicturesTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18:
                {
                    this.DivPhotos = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 19:
                {
                    this.ListPhotos = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    #line 343 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.GridView)this.ListPhotos).ItemClick += this.ListPhotos_ItemClick;
                    #line default
                }
                break;
            case 23:
                {
                    this.LblNotes = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 24:
                {
                    this.LblNotesText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 25:
                {
                    this.LblBeforeClosing = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 26:
                {
                    this.LblBeforeClosingText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 27:
                {
                    this.LblActionsTaken = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28:
                {
                    this.LblActionsTakenText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 29:
                {
                    this.LblAfterOpening = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 30:
                {
                    this.LblAfterOpeningText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31:
                {
                    this.LblName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 32:
                {
                    this.LblDateTime = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 33:
                {
                    this.BtnViewAssessment = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 218 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnViewAssessment).Click += this.BtnViewAssessment_Click;
                    #line default
                }
                break;
            case 34:
                {
                    this.LblServicesTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 35:
                {
                    this.DividerServices = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 36:
                {
                    this.ListPatientServices = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 40:
                {
                    this.LblMedicationTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 41:
                {
                    this.DividerMeds = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 42:
                {
                    this.ListMedicines = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 46:
                {
                    this.BtnCancel = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 39 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnCancel).Click += this.BtnCancel_Click;
                    #line default
                }
                break;
            case 47:
                {
                    this.BtnOpenNav = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 45 "..\..\..\ViewPatientVisit.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.BtnOpenNav).Click += this.BtnToggleNav_Click;
                    #line default
                }
                break;
            case 48:
                {
                    this.IconAppts = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    ViewPatientVisit_obj1_Bindings bindings = new ViewPatientVisit_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element15 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ViewPatientVisit_obj15_Bindings bindings = new ViewPatientVisit_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.VisitDocumentInformation) element15.DataContext);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                }
                break;
            case 20:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element20 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    ViewPatientVisit_obj20_Bindings bindings = new ViewPatientVisit_obj20_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.VisitPhotoInformation) element20.DataContext);
                    element20.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element20, bindings);
                }
                break;
            case 37:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element37 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ViewPatientVisit_obj37_Bindings bindings = new ViewPatientVisit_obj37_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Service) element37.DataContext);
                    element37.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element37, bindings);
                }
                break;
            case 43:
                {
                    global::Windows.UI.Xaml.Controls.RelativePanel element43 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    ViewPatientVisit_obj43_Bindings bindings = new ViewPatientVisit_obj43_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::WoundManagementSystem.Medicine) element43.DataContext);
                    element43.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element43, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

